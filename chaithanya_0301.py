# -*- coding: utf-8 -*-
"""chaithanya-0301

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uxuYRmtlL3_174udMH2kPZnJoaYvTg-8

18/10/2023(wednesday)
"""

from functools import partial


def power(a, b):
	return a**b


# partial functions
pow2 = partial(power, b=2)
pow4 =partial(power, b=4)
power_of_5 = partial(power, 5)

print(power(2, 3))
print(pow2(4))
print(pow4(9))
print(power_of_5(5))

print('Function used in partial function pow2 :', pow2.func)
print('Default keywords for pow2 :', pow2.keywords)
print('Default arguments for power_of_5 :', power_of_5.args)

from functools import partialmethod

class Demo:
	def __init__(self):
		self.color = 'PINK'

	def _color(self, type):
		self.color = type

	set_red = partialmethod(_color, type='PURPLE')
	set_blue = partialmethod(_color, type='YELLOW')
	set_green = partialmethod(_color, type='ORANGE')


obj = Demo()
print(obj.color)

obj.set_blue()
print(obj.color)

obj.set_red()
print(obj.color)

obj.set_green()
print(obj.color)

from functools import cmp_to_key

# function to sort according to last character
def cmp_fun(a, b):
	if a[-1] > b[-1]:
		return 1
	elif a[-1] < b[-1]:
		return -1
	else:
		return 0

list1 = ['C', 'H', 'R']
l = sorted(list1, key = cmp_to_key(cmp_fun))
print('sorted list :', l)

from functools import reduce
list1 = [6, 4, 8, 9, 1, 4]
sum_of_list1 = reduce(lambda a, b:a + b, list1)

list2 = ["abc", "xyz", "def"]
max_of_list2 = reduce(lambda a, b:a if a>b else b, list2)

print('Sum of list1 :', sum_of_list1)
print('Maximum of list2 :', max_of_list2)

from functools import total_ordering

@total_ordering
class N:
	def __init__(self, value):
		self.value = value
	def __eq__(self, other):
		return self.value == other.value

	# Reverse the function of
	# '<' operator and accordingly
	# other rich comparison operators
	# due to total_ordering decorator
	def __lt__(self, other):
		return self.value > other.value


print('1O > 5 :', N(6)>N(2))
print('5 < 1 :', N(3)<N(1))
print('8 <= 7 :', N(2)<= N(7))
print('18 >= 10 :', N(9)>= N(10))
print('5 == 5 :', N(5)== N(5))